name: Main workflow
on:
  push:
    branches:
      - main
    paths-ignore:
      - '.gitignore'
      - '.metadata'
      - 'README.md'
  pull_request:
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  tagValidation:
    name: Tag validation
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.split.outputs._0 }}
    steps:
      - uses: actions/checkout@v2
      - name: Get the version from the pubspec
        id: pubspecVersion
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: pubspec.yaml
          version: version
      - uses: jungwinter/split@v1
        id: split
        with:
          msg: ${{ steps.pubspecVersion.outputs.version }}
          seperator: '+'
      - name: Validate that version doesn't exists
        uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: ${{ steps.split.outputs._0 }}
      - if: ${{ steps.checkTag.outputs.exists == 'true' && github.event_name == 'pull_request' }}
        name: Post comment on PR
        uses: thollander/actions-comment-pull-request@1.0.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: '${{ steps.split.outputs._0 }} already exists, please update the pubspec version.'
      - if: ${{ steps.checkTag.outputs.exists == 'true' }}
        run: |
          echo "${{ steps.split.outputs._0 }} already exists, please update the pubspec version."
          exit 1

  validationWorkflow:
    name: Tests and checks
    runs-on: ubuntu-latest
#    env:
      # TODO Put here the environment variables needed to build your application.
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1

      # Get flutter dependencies.
      - run: flutter pub get

      # Check the format of the code and check if the code has any errors/warnings
      - run: flutter format --set-exit-if-changed .
      - run: flutter analyze

      # Run the tests
      - run: flutter test --coverage

      # Comment coverage report
      - uses: romeovs/lcov-reporter-action@v0.2.16
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info
      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add coverage/lcov.info
          git commit -m "Update coverage file" -a
      - name: Push changes
        if: ${{ github.event_name == 'pull_request' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: refs/heads/${{ github.head_ref }}

  buildWorkflow:
    name: Build the application for
    needs: [validationWorkflow, tagValidation]
    runs-on: ubuntu-latest
#    env:
      # TODO Put here the environment variables needed to build your application.
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1

      # Get flutter dependencies.
      - run: flutter pub get

      - name: Build APK for Android
        run: flutter build apk

      - name: Create release
        if: "${{ github.event_name == 'push' }}"
        uses: marvinpinto/action-automatic-releases@latest
        with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            draft: true
            automatic_release_tag: ${{ needs.tagValidation.outputs.version }}
            title: v${{ needs.tagValidation.outputs.version }}
            files: |
              build/app/outputs/apk/release/app-release.apk

  # TODO add ios build